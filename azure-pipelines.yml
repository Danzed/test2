pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  batch: true
  branches:
    include: 
    - refs/heads/*

variables:
  projectName: aven-web-api
  registryServerName: '$(registryName).azurecr.io'
  imageName: '$(projectName)'
  # define 3 more variables: registryName, registryLogin and registryPassword in the build pipeline in UI

steps:
- bash: docker-compose down
  displayName: 'docker compose down'

- bash: | 
    docker container prune -f
    docker volume prune -f
  displayName: 'docker prune container'

- bash: docker rmi $(docker images --format "{{.ID}}")
  displayName: 'docker rmi images'

  

- script: npm install
  displayName: 'NPM INSTALL'

- script: npm test
  displayName: 'Run Test'

- bash: docker-compose up -d
  displayName: 'docker compose'

# - bash: docker build -f $(system.defaultWorkingDirectory)/Dockerfile -t $(registryServerName)/$(imageName):$(build.buildId) $(system.defaultWorkingDirectory)/
#   displayName: 'docker build'

- bash: docker tag $(imageName) $(registryServerName)/$(imageName)-dev:$(build.buildId)
  displayName: 'docker tag'

- bash: |
    docker images -a
    docker ps -a
  displayName: 'ls'


- bash: |
    docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
    docker push $(registryServerName)/$(imageName):$(build.buildId)
  displayName: 'docker push'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/dev-ci-test'))

# - task: HelmInstaller@0
#   displayName: 'Install Helm'
#   inputs:
#     helmVersion: 2.14.1

# - bash: helm package --version $(build.buildId) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/charts/$(projectName)
#   displayName: 'helm package'

# - bash: az acr helm push -n $(registryName) -u $(registryLogin) -p $(registryPassword) $(build.artifactStagingDirectory)/$(projectName)-$(build.buildId).tgz
#   displayName: 'az acr helm push'
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/dev-ci-test'))